/*******************************************************************************
 * Copyright (c) 2014 itemis AG (http://www.itemis.de).
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *******************************************************************************/
package org.reference

interface MyInterface70a {
    version { major 1 minor 0 }

	// *** overloading of methods (in-arguments, without inheritance)
	
	// no in-argument vs. in-argument
    method method10:a {}
    method method10:b {
    	in {
    		String arg1
    	}
    }

	// different in-argument type
    method method11:a {
    	in {
    		UInt8 arg1
    	}
    }
    method method11:b {
    	in {
    		String arg1
    	}
    }

	// add/remove an in-argument
    method method12:a {
    	in {
    		UInt8 arg1
    	}
    }
    method method12:b {
    	in {
    		UInt8 arg1
    		UInt8 arg2
    	}
    }

	// exchanged order of in-arguments
    method method13:x {
    	in {
    		String arg1
    		UInt8 arg2
    	}
    }
    method method13:y {
    	in {
    		UInt8 arg1
    		String arg2
    	}
    }
    
	// typedef in-arguments, check will not resolve typedefs
    method method14:x {
    	in {
    		String arg1
    	}
    }
    method method14:y {
    	in {
    		MyString arg1
    	}
    }

    
	// *** overloading of methods (out-arguments, without inheritance)

	// no out-argument vs. out-argument
    method method20:x {}
    method method20:y {
    	out {
    		String arg1
    	}
    }

	// different out-argument type
    method method21:x {
    	out {
    		UInt8 arg1
    	}
    }
    method method21:y {
    	out {
    		String arg1
    	}
    }

	// add/remove an out-argument
    method method22:m {
    	out {
    		UInt8 arg1
    	}
    }
    method method22:n {
    	out {
    		UInt8 arg1
    		UInt8 arg2
    	}
    }

	// exchanged order of out-arguments
    method method23:a {
    	out {
    		String arg1
    		UInt8 arg2
    	}
    }
    method method23:b {
    	out {
    		UInt8 arg1
    		String arg2
    	}
    }


	// *** overloading of methods (in/out-arguments, without inheritance)

	// replaced in-argument by out-argument
    method method30:r {
    	in {
    		UInt8 arg1
    	}
    }
    method method30:t {
    	out {
    		UInt8 arg1
    	}
    }


	// *** overloading of broadcasts (without inheritance)

	// no out-argument vs. out-argument
    broadcast broadcast50:sel1 {}
    broadcast broadcast50:sel2 {
    	out {
    		String arg1
    	}
    }

	// different out-argument type
    broadcast broadcast51:a {
    	out {
    		UInt8 arg1
    	}
    }
    broadcast broadcast51:b {
    	out {
    		String arg1
    	}
    }

	// add/remove an out-argument
    broadcast broadcast52:a {
    	out {
    		UInt8 arg1
    	}
    }
    broadcast broadcast52:b {
    	out {
    		UInt8 arg1
    		UInt8 arg2
    	}
    }

	// exchanged order of out-arguments
    broadcast broadcast53:c {
    	out {
    		String arg1
    		UInt8 arg2
    	}
    }
    broadcast broadcast53:d {
    	out {
    		UInt8 arg1
    		String arg2
    	}
    }


	// auxiliary type
	typedef MyString is String

}
