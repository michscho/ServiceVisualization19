module org.franca.userguide.GenerateDocs

var document = "Franca User Guide"
var targetDir = "src-gen"
var release = false
var cleanAfterRun = false

var pdfLatex = "/usr/texbin/pdflatex"
//var pdfLatex = "/usr/bin/pdflatex"
//var pdfLatex = "C:/Program Files/MiKTeX 2.9/miktex/bin/pdflatex"


Workflow {
	component = org.eclipse.xtext.mwe.Reader {
		path = "src"
		uriFilter = org.eclipse.xtext.mwe.NameBasedFilter {
			extension = "xdoc"
		}
		// this class will be generated by the xtext generator
		register = org.eclipse.xtext.xdoc.XdocGeneratorSetup {}

		load = {
			slot = "doc"
			type = "Document"
			name = document
			namespaceDelimiter = "disabled namespace delimiter"
		}
	}

	// build online help for Eclipse 
	component = org.eclipse.xtext.xdoc.generator.XdocGeneratorComponent {
		register = org.eclipse.xtext.xdoc.generator.XdocEclipseHelpGeneratorSetup {}
		slot = 'doc'
		release = release
		outlet = {
			path = "contents"
		}
	}

	// build documentation in HTML
	component = org.eclipse.xtext.xdoc.generator.XdocGeneratorComponent {
		register = org.eclipse.xtext.xdoc.generator.XdocHtmlGeneratorSetup {}
		slot = 'doc'
		release = release
		outlet = {
			path = "website"
		}
		outlet = {
			outletName = "WEB_SITE"
			path = "website"
		}
	}

	// build documentation in Latex format
	component = org.eclipse.xtext.xdoc.generator.XdocGeneratorComponent {
		register = org.eclipse.xtext.xdoc.XdocGeneratorSetup {}
		slot = 'doc'
		release = release
		outlet = {
			path = targetDir
		}
	}

	// convert Latex format to pdf
	component = org.franca.core.utils.IfFileExistsComponent {
		// Latex will only be called if the pdfLatex path is available
		fileName = pdfLatex
		component = org.eclipse.xtext.xdoc.generator.util.LatexRunner auto-inject {
			//pdfLatexCommandParams = "-halt-on-error"
			pdfLatex = pdfLatex
			outputDir = targetDir
			inputSlot = "doc"
			cleanAfterRun = cleanAfterRun
		}
	}
}

