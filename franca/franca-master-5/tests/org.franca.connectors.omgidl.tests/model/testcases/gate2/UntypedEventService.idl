//#ifndef _UNTYPED_EVENT_SERVICE_H_
//#define _UNTYPED_EVENT_SERVICE_H_

module CosEventComm
{

  exception Disconnected { };

  interface PushConsumer
  {
    void push (in any data) raises (Disconnected); 
    void disconnect_push_consumer ();

  };

  interface PushSupplier
  {
    void disconnect_push_supplier();

  };


};


module CosEventChannelAdmin
{

  exception AlreadyConnected {};
  exception TypeError {};

  interface ProxyPushConsumer : CosEventComm::PushConsumer
  {
    void connect_push_supplier ( in CosEventComm::PushSupplier push_supplier )
           raises (AlreadyConnected);
  };

  
  interface ProxyPushSupplier : CosEventComm::PushSupplier
  {
    void connect_push_consumer ( in CosEventComm::PushConsumer push_consumer )
           raises (AlreadyConnected, TypeError);
  };

  interface ConsumerAdmin
  {
    ProxyPushSupplier obtain_push_supplier ();
  };

  interface SupplierAdmin
  {
    ProxyPushConsumer obtain_push_consumer ();
  };

  interface EventChannel
  {
    ConsumerAdmin for_consumers ();
    SupplierAdmin for_suppliers ();
    void destroy ();
	   
   };
};

//#endif // _UNTYPED_EVENT_SERVICE_H_

