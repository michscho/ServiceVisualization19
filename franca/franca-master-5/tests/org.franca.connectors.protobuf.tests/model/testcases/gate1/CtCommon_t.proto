package Pkg.Ct.CtCommon_t;
option java_package =  "Pkg.Ct";

import "Common_t.proto";
import "Infrastructure_t.proto";

enum pathType_t
{
   ePath_Unknown = 0;
   ePath_Type1 = 1;
   ePath_Type2 = 2;
}

enum amType_t
{
   eAm_Unknown = 0;
   eAmb_Type1 = 1;
   eAmb_Type2ss = 2;
}

enum aobType_t
{
   eAOB_Unknown = 0;
   eAOB_None = 1;
   eAOB_Type1 = 2;
   eAOB_Type2 = 3;
}

enum rateIndicatorType_t
{
   eRateIndicator_Undefined = 0;
   eRateIndicator_High = 1;
   eRateIndicator_Normal = 2;
   eRateIndicator_Zero = 3;
   eRateIndicator_ZeroUnread = 4;
}

enum cfType_t
{
   eCf_Unknown = 0;
   eCf_Low = 1;
   eCf_Medium = 2;
   eCf_High = 3;
   eCf_None = 4;
}

enum ctPrefixType_t
{
   eCtPrefix_Unknown = 0;
   eCtPrefix_i = 1;
   eCtPrefix_2 = 2;
   eCtPrefix_3 = 3;
   eCtPrefix_4 = 4;
   eCtPrefix_5 = 5;
   eCtPrefix_6 = 6;
   eCtPrefix_7 = 7;
   eCtPrefix_8 = 8;
   eCtPrefix_9 = 9;
   eCtPrefix_10 = 10;

   
   eCtPrefix_11 = 11;

   
   eCtPrefix_12 = 12;

   
   eCtPrefix_13 = 13;

   
   eCtPrefix_14 = 14;
}

enum sttType_t
{
   eInfoState_Unknown = 0;
   eInfoState_Measured = 1;
   eInfoState_Calculated = 2;
   eInfoState_Default = 3;
}

enum cModeType_t
{
   eConstraintsMode_Auto = 0;
   eConstraintsMode_Manual = 1;
   eocType_tff = 2;
}

enum ocType_t
{
   eOc_Unknown = 0;
   eOc_1 = 1;
   eOc_2 = 2;
}

enum psInfoType_t
{
   ePsInfo_Unknown = 0;
   ePsInfo_1 = 1;
   ePsInfo_2 = 2;
   ePsInfo_3 = 3;
   ePsInfo_4 = 4;
   ePsInfo_5 = 5;
   ePsInfo_6 = 6;
   ePsInfo_7 = 7;
}

enum infoType_t
{
   eInfo_Unknown = 0;
   eInfo_1 = 1;
   eInfo_2 = 2;
}

enum sourceType_t
{
   eSource_1 = 28;
   eSource_2 = 29;
   eSource_Unknown = 0;
   eSource_3 = 1;
   eSource_4 = 2;
   eSource_5 = 3;
   eSource_6 = 4;
   eSource_7 = 5;
   eSource_8 = 6;
   eSource_9 = 7;
   eSource_10 = 8;
   eSource_11 = 9;
   eSource_12 = 10;
   eSource_13 = 11;
   eSource_14 = 12;
   eSource_15 = 13;
   eSource_16 = 14;
   eSource_16 = 15;
   eSource_18 = 16;
   eSource_19 = 17;
   eSource_20 = 18;
   eSource_21 = 19;
   eSource_22 = 20;
   eSource_23 = 21;
   eSource_24 = 22;
   eSource_25 = 23;
   eSource_26 = 24;
   eSource_27 = 25;
   eSource_28 = 26;
   eSource_29 = 27;
   eSource_30 = 100;
}

enum sType_t
{
   eSType_0 = 0;
   eSType_1 = 1;
   eSType_2 = 2;
}

enum sModeType_t
{
   eSMode_Unknown = 0;
   eSMode_1 = 1;
   eSMode_2 = 2;
}

enum sSourceType_t
{

   
   eSSource_Unknown = 0;

   
   eSSource_1 = 1;

   
   eSSource_2 = 2;

   
   eSSource_3 = 3;

   eSSource_4 = 4;

   
   eSSource_5 = 5;

   
   eSSource_6 = 6;

  
   eSSource_7 = 7;

   
   eSSource_8 = 9;

   
   eSSource_9 = 10;

   
   eSSource_10 = 11;

   
   eSSource_11 = 12;

   
   eSSource_12 = 13;

   
   eSSource_13 = 14;

   
   eSSource_14 = 15;

   
   eSSource_15 = 16;

   
   eSSource_16 = 17;

   
   eSSource_17 = 18;

   
   eSSource_18 = 19;

   
   eSSource_19 = 20;

   
   eSSource_20 = 21;

   
   eSSource_21 = 22;

   
   eSSource_22 = 23;
   eSSource_23 = 24;

  
   eSSource_33 = 25;

  
   eSSource_24 = 26;

   
   eSSource_25 = 27;

   
   eSSource_26 = 28;

   
   eSSource_27 = 29;

   
   eSSource_28 = 30;

   
   eSSource_29 = 31;

  
   eSSource_30 = 32;

   
   eSSource_31 = 33;

   
   eSSource_32 = 34;

   
   eSSource_34 = 35;

   
   eSSource_35 = 36;

   
   eSSource_36 = 37;

   
   eSSource_37 = 38;

   
   eSSource_38 = 39;

   
   eSSource_39 = 40;

   
   eSSource_40 = 41;

  
   eSSource_41 = 42;

   
   eSSource_42 = 43;
   eSSource_43 = 44;
   eSSource_44 = 100;
}
		
message aobInfo_t
{
   optional double data1 = 1;
   optional aobType_t data2 = 2;
}

message aouInfo_t
{	
   
   optional sint64 aou1 = 1;

   optional sint64 aou2 = 2;

   
   optional double aou3 = 3;

   
   optional double aou4 = 4;
}

message aouPolygonInfo_t
{	
   
   repeated Pkg.Infrastructure.Common_t.position_t aouPolygon = 1;

   
   optional double info = 2;
}


message historyRequest_t
{

   repeated ctD_t ctList = 1;


   optional Pkg.Infrastructure.Infrastructure_t.historyRequestHeader_t options = 2;
}

message ctD_t
{

   optional sint64 ctNumber = 1;

   
   optional ctPrefixType_t ctPrefix = 2;

   
   optional string ctLabel = 3;


   optional Pkg.Infrastructure.Common_t.color_t ctColor = 4;

   
   optional sint64 data1 = 5;

   
   optional bool ctIs = 6;

   
   optional sint64 uniqueID = 7;


   optional sint64 data2 = 8;

   
   optional bool ctIsC = 9;

   optional Pkg.Infrastructure.Common_t.sysType_t sys = 10;
}


message lConstraints_t
{	
   
   optional bool data1 = 1;

   
   optional bool data2 = 2;

   optional bool data3 = 3;

   optional bool data4 = 4;

   optional bool data5 = 5;

   optional bool data6 = 6;

   optional bool data7 = 7;

   optional cfType_t data8 = 12;

   optional cfType_t data9 = 13;

   optional double data10 = 16;

   optional double data11 = 17;

   optional double data12 = 18;

   optional cModeType_t data13 = 21;

   optional sint64 ID = 22;

   optional ctD_t data14 = 23;
}

message ocType_t
{
   optional ocType_t value = 1;
   optional sint64 data = 2;
}

message psInfoType
{	
   
   optional Pkg.Infrastructure.Infrastructure_t.timespec_t timestamp = 1;

   
   optional psInfoType_t infoType = 2;

   
   optional double minimum = 3;

   
   optional double best = 4;

   optional double maximum = 5;

   optional sType_t info = 6;

   optional sint64 index = 7;

   optional pathType_t path = 8;

   optional double angle = 9;

   optional double std = 10;

   
   optional cfType_t cfData = 12;

  
   optional bool flag = 13;
}

message pInfo_t
{	
   
   optional Pkg.Infrastructure.Infrastructure_t.timespec_t timestamp = 1;

   
   optional infoType_t infoType = 2;

   optional double minimum = 3;

   optional double best = 4;

   optional double maximum = 5;
   optional sttType_t info = 6;

   
   optional sModeType_t mode = 7;

   
   optional sint64 index = 8;

   
   optional cfType_t cfData = 9;

   
   optional bool flag = 10;
}

message standardDeviatedInfo_t
{	
   
   optional double value = 1;

   
   optional double stdDev = 2;
}

	
